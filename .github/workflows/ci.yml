name: CI

on:
  push:
    branches: [main, 1.x]
  pull_request:
    branches: [main, 1.x]

jobs:
  tests:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php: [8.1, 8.2, 8.3, 8.4]
        laravel: [10.*, 11.*, 12.*]
        stability: [prefer-lowest, prefer-stable]
        include:
          - laravel: 10.*
            testbench: ^8.15
          - laravel: 11.*
            testbench: ^9.0
          - laravel: 12.*
            testbench: ^10.0
        exclude:
          - laravel: 11.*
            php: 8.1
          - laravel: 12.*
            php: 8.1
          - laravel: 12.*
            php: 8.2
          - stability: prefer-lowest
            php: 8.4

    name: PHP ${{ matrix.php }} - Laravel ${{ matrix.laravel }} - ${{ matrix.stability }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Execute tests
        run: vendor/bin/pest

  code-quality:
    runs-on: ubuntu-latest

    name: Code Quality

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Install dependencies
        run: |
          composer update --prefer-stable --prefer-dist --no-interaction

      - name: Check PHP syntax
        run: vendor/bin/phplint

      - name: Check code style
        run: vendor/bin/pint --test

  coverage:
    runs-on: ubuntu-latest

    name: Coverage

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: xdebug

      - name: Install dependencies
        run: |
          composer update --prefer-stable --prefer-dist --no-interaction

      - name: Execute tests with coverage
        env:
          XDEBUG_MODE: coverage
        run: vendor/bin/pest --coverage --min=80

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
